pipeline{

    agent any
    environment{

        version = "$(env.BUILD_ID)"
    }
        stages{

            stage('sonar quality status')   {

                agent{

                   docker{
                       image 'maven'
                   } 
                }

                steps{

                    script{

                        withSonarQubeEnv(credentialsId: 'sonar key1', installationName: 'sonarqube server') 
                        {
                        sh 'mvn clean package sonar:sonar'
                        }

                    }
                }
            }

            stage('quality gate status'){

                steps{

                    script{

                        waitForQualityGate abortPipeline: false, credentialsId: 'sonar key1'

                    }
                }
            }

            stage('docker build and push to nexus repo'){
            

                steps{

                    script{
                        withCredentials([string(credentialsId: 'nexus-password', variable: 'nexus creds')]) 
                        {

                        sh'''
                        docker build -t 3.237.174.220:8083/springapp:$(VERSION) .
                        
                        docker login -u admin -p $nexus creds 3.237.174.220:8083
                        
                        docker push 3.237.174.220:8083/springapp:$(VERSION)

                        docker rmi 3.237.174.220:8083/springapp:$(VERSION)
                        '''

                        }
                    }
                }
            }
        }

    

}
